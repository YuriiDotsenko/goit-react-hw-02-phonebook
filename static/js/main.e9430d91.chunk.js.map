{"version":3,"sources":["components/Section/Section.js","components/Input/Input.js","components/AddButton/AddButton.js","components/Form/Form.js","components/ContactsList/ContactsList.js","components/Contacts/Contacts.js","App.js","index.js"],"names":["Section","title","children","className","defaultProps","Input","type","name","pattern","value","handleInputChange","label","required","onChange","autoComplete","AddButton","Form","state","number","handleInput","event","setState","currentTarget","onFormSubmit","preventDefault","props","addContact","this","onSubmit","Component","ContactsList","contacts","removeContact","map","id","onClick","Contacts","filterFunction","filterValue","handleFilter","App","filter","filterContacts","normalizedFilter","toLowerCase","includes","find","contact","alert","prevState","uuidv4","idToRemove","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9430d91.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Section.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className=\"Section\">\r\n    <h1 className=\"Title\">{title}</h1>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.defaultProps = {\r\n  title: '',\r\n  children: [],\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Input.css';\r\n\r\nconst Input = ({\r\n  type,\r\n  name,\r\n  pattern,\r\n  title,\r\n  value,\r\n  handleInputChange,\r\n  label,\r\n}) => (\r\n  <label className=\"Label\">\r\n    {label}:\r\n    <input\r\n      className=\"Input\"\r\n      type={type}\r\n      name={name}\r\n      pattern={pattern}\r\n      title={title}\r\n      required\r\n      value={value}\r\n      onChange={handleInputChange}\r\n      autoComplete=\"off\"\r\n    />\r\n  </label>\r\n);\r\n\r\nInput.defaultProps = {\r\n  type: 'text',\r\n  label: '',\r\n};\r\n\r\nInput.propTypes = {\r\n  type: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  pattern: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  handleInputChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string,\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport './AddButton.css';\r\n\r\nconst AddButton = () => (\r\n  <button className=\"Addbtn__style\" type=\"submit\">\r\n    Add contact\r\n  </button>\r\n);\r\n\r\nexport default AddButton;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Input from '../Input';\r\nimport AddButton from '../AddButton';\r\nimport './Form.css';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    addContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  handleInput = event => {\r\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\r\n  };\r\n\r\n  onFormSubmit = event => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    this.props.addContact(name, number);\r\n\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className=\"Form\" onSubmit={this.onFormSubmit}>\r\n        <Input\r\n          label=\"Name\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          handleInputChange={this.handleInput}\r\n          value={name}\r\n        />\r\n        <Input\r\n          label=\"Phone number\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          value={number}\r\n          handleInputChange={this.handleInput}\r\n        />\r\n        <AddButton />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport './ContactsList.css';\r\n\r\nconst ContactsList = ({ contacts, removeContact }) => (\r\n  <ul className=\"List\">\r\n    {contacts.map(({ name, id, number }) => (\r\n      <li key={id} className=\"Contact\">\r\n        <p className=\"Text\">\r\n          <span className=\"Name\">{name}</span>\r\n          <span className=\"Phone\">{number}</span>\r\n        </p>\r\n        <button\r\n          className=\"Remove__btn\"\r\n          type=\"button\"\r\n          onClick={() => removeContact(id)}\r\n        >\r\n          Remove contact\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ContactsList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Input from \"../Input\";\r\nimport ContactsList from \"../ContactsList\";\r\n\r\nconst Contacts = ({\r\n  title,\r\n  filterFunction,\r\n  filterValue,\r\n  handleFilter,\r\n  removeContact,\r\n}) => (\r\n  <>\r\n    <h2>{title}</h2>\r\n    <Input\r\n      label=\"Find contacts by name\"\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={filterValue}\r\n      handleInputChange={handleFilter}\r\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n    />\r\n    <ContactsList contacts={filterFunction()} removeContact={removeContact} />\r\n  </>\r\n);\r\n\r\nContacts.defaultProps = {\r\n  title: \"\",\r\n  filterValue: \"\",\r\n};\r\n\r\nContacts.propTypes = {\r\n  title: PropTypes.string,\r\n  filterFunction: PropTypes.func.isRequired,\r\n  filterValue: PropTypes.string,\r\n  handleFilter: PropTypes.func.isRequired,\r\n  removeContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contacts;\r\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport Section from \"./components/Section\";\nimport Form from \"./components/Form\";\nimport Contacts from \"./components/Contacts\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { name: \"text\", id: 1, number: \"0667878787\" },\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n\n    filter: \"\",\n  };\n\n  handleFilter = (event) => {\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\n  };\n\n  filterContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  addContact = (name, number) => {\n    if (this.state.contacts.find((contact) => contact.name === name)) {\n      alert(\"Attempt to create existing contact!\");\n      return;\n    }\n\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, { name, id: uuidv4(), number }],\n    }));\n  };\n\n  removeContact = (idToRemove) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(({ id }) => id !== idToRemove),\n    }));\n  };\n\n  render() {\n    return (\n      <div>\n        <Section title=\"Phonebook\">\n          <Form addContact={this.addContact} />\n          <Contacts\n            filterValue={this.state.filter}\n            handleFilter={this.handleFilter}\n            title=\"Contacts\"\n            filterFunction={this.filterContacts}\n            removeContact={this.removeContact}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}